<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Karl&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-11-05T02:20:07.075Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Karl</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>macOS 搭建 LMNMP 环境</title>
    <link href="http://yoursite.com/2019/11/04/macOS-%E6%90%AD%E5%BB%BA-LMNMP-%E7%8E%AF%E5%A2%83/"/>
    <id>http://yoursite.com/2019/11/04/macOS-搭建-LMNMP-环境/</id>
    <published>2019-11-04T12:06:04.000Z</published>
    <updated>2019-11-05T02:20:07.075Z</updated>
    
    <content type="html"><![CDATA[<p>使用 <code>brew</code> 命令进行安装</p><h2 id="安装-MySql"><a href="#安装-MySql" class="headerlink" title="安装 MySql"></a>安装 MySql</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew search mysql</span><br></pre></td></tr></table></figure><p>搜索一下，看看有什么版本，大家可以根据自己的需要选择版本，我这选择 <code>5.7</code> </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install mysql@5.7</span><br></pre></td></tr></table></figure><p>静静等待安装，安装完成之后启动服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew services start mysql</span><br></pre></td></tr></table></figure><p>根据安装完之后的信息提示</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">We've installed your MySQL database without a root password. To secure it run:</span><br><span class="line">    mysql_secure_installation</span><br></pre></td></tr></table></figure><p>到 <code>/usr/local/Cellar/mysql@5.7/5.7.28/bin</code> 目录下执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./mysql_secure_installation</span><br></pre></td></tr></table></figure><p>按照信息提示一步一步完成。然后记得把 <code>mysql</code> 添加到环境变量中去</p><p>在 <code>~/.zshrc</code> 中添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/<span class="built_in">local</span>/Cellar/mysql@5.7/5.7.28/bin</span><br></pre></td></tr></table></figure><blockquote><p>后面是自己 mysql 的安装目录</p></blockquote><p>执行一下命令使其生效</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/.zshrc</span><br></pre></td></tr></table></figure><blockquote><p>因为我用的是 zsh，所以是在 <code>.zshrc</code> ，如果你是使用默认的 bash，那同样在 <code>~/.bash_profile</code> 添加环境变零，使其生效即可</p></blockquote><h2 id="安装-Nginx"><a href="#安装-Nginx" class="headerlink" title="安装 Nginx"></a>安装 Nginx</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install nginx</span><br></pre></td></tr></table></figure><p>等待安装完成，编辑 <code>/usr/local/etc/nginx/nginx.conf</code> 配置文件，将默认监听的端口 <code>8080</code> 改成 <code>80</code> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">    ............</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  localhost;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#charset koi8-r;</span></span><br><span class="line">   .......</span><br></pre></td></tr></table></figure><p>启动服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew services start nginx</span><br></pre></td></tr></table></figure><p>访问 <code>http://localhost</code> ，就可以看到 Nginx 的欢迎页面了</p><h2 id="安装-PHP"><a href="#安装-PHP" class="headerlink" title="安装 PHP"></a>安装 PHP</h2><p>同样使用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew search php</span><br></pre></td></tr></table></figure><p>找你所需要的版本安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install php</span><br></pre></td></tr></table></figure><p>这样，它会直接安装最新版本的 php。查看 php 版本发现还是系统自带的 7.1 版本，这个是因为还没把我们安装的最新版本加到环境变量中去。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## 使用自带的 bash</span></span></span><br><span class="line">echo 'export PATH="/usr/local/opt/php@7.2/bin:$PATH"' &gt;&gt; ~/.bash_profile</span><br><span class="line">echo 'export PATH="/usr/local/opt/php@7.2/sbin:$PATH"' &gt;&gt; ~/.bash_profile</span><br><span class="line"></span><br><span class="line">source ~/.bash_profile</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## 使用 zsh</span></span></span><br><span class="line">echo 'export PATH="/usr/local/opt/php@7.2/bin:$PATH"' &gt;&gt; ~/.zshrc</span><br><span class="line">echo 'export PATH="/usr/local/opt/php@7.2/sbin:$PATH"' &gt;&gt; ~/.zshrc</span><br><span class="line"></span><br><span class="line">source ~/.zshrc</span><br></pre></td></tr></table></figure><h2 id="配置-PHP-和-Nginx"><a href="#配置-PHP-和-Nginx" class="headerlink" title="配置 PHP 和 Nginx"></a>配置 PHP 和 Nginx</h2><p><code>/usr/local/etc/nginx/servers</code> 目录下添加 <code>default.conf</code> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  default.me ;  <span class="comment">## 根据自己需要填写</span></span><br><span class="line">        root   <span class="string">"/usr/local/var/www/default"</span>; <span class="comment">## 根据自己的目录</span></span><br><span class="line">        index index.html index.htm index.php;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            <span class="comment">#autoindex  on;</span></span><br><span class="line">            try_files <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.php?<span class="variable">$query_string</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location ~ \.php(.*)$  &#123;</span><br><span class="line">            fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">            fastcgi_index  index.php;</span><br><span class="line">            fastcgi_split_path_info  ^((?U).+\.php)(/?.+)$;</span><br><span class="line">            </span><br><span class="line">            fastcgi_param  SCRIPT_FILENAME  <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">            fastcgi_param  PATH_INFO  <span class="variable">$fastcgi_path_info</span>;</span><br><span class="line">            fastcgi_param  PATH_TRANSLATED  <span class="variable">$document_root</span><span class="variable">$fastcgi_path_info</span>;</span><br><span class="line">            include        fastcgi_params;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再次检查 <code>/usr/local/etc/nginx</code> 目录下是否存在 <code>fastcgi.conf</code> ，<code>nginx.conf</code></p><p>如果没有的话，复制默认的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp nginx.conf.default nginx.conf</span><br><span class="line">cp fastcgi.conf.default fastcgi.conf</span><br></pre></td></tr></table></figure><p>重启服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">_ php-fpm -d</span><br><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure><p>就可以开心的玩耍了。</p><h2 id="安装扩展"><a href="#安装扩展" class="headerlink" title="安装扩展"></a>安装扩展</h2><h3 id="redis"><a href="#redis" class="headerlink" title="redis"></a>redis</h3><p>这里可以使用 <code>brew</code> 轻松安装服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew instll redis</span><br></pre></td></tr></table></figure><p>接下来就是重点，安装 php 扩展，到 <a href="http://pecl.php.net/package/redis" target="_blank" rel="noopener">http://pecl.php.net/package/redis</a> 选择自己的需要的版本</p><p>下载源码包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://pecl.php.net/get/redis-5.1.0RC2.tgz</span><br></pre></td></tr></table></figure><p>解压源码包，进入目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf redis-5.1.tgz</span><br><span class="line"><span class="built_in">cd</span> redis-5.1.0</span><br></pre></td></tr></table></figure><p>执行一下 <code>phpize</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// php目录</span><br><span class="line">/usr/<span class="built_in">local</span>/Cellar/php@7.2/7.2.24/bin/phpize</span><br><span class="line">./configure --with-php-config=/usr/<span class="built_in">local</span>/Cellar/php@7.2/7.2.24/bin/php-config</span><br></pre></td></tr></table></figure><p>编译安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><p>修改 php.ini 配置。在 <code>/usr/local/etc/php/7.2/php.ini</code> 文件中添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">extension=redis.so</span><br></pre></td></tr></table></figure><p>重启 <code>php-fpm</code> 就可以看到 <code>redis</code> 扩展了</p><h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><p>访问时，网页一直显示 502 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[error] 38689<span class="comment">#0: *6 kevent() reported that connect() failed (61: Connection refused) while connecting to upstream, client: 127.0.0.1, server: blog.me, request: "GET / HTTP/1.1", upstream: "fastcgi://127.0.0.1:9000", host: "blog.me"</span></span><br></pre></td></tr></table></figure><p>因为没有启动 php-fpm服务，启动就行了。</p><p> <strong><em>不对之处，请多指教</em></strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用 &lt;code&gt;brew&lt;/code&gt; 命令进行安装&lt;/p&gt;
&lt;h2 id=&quot;安装-MySql&quot;&gt;&lt;a href=&quot;#安装-MySql&quot; class=&quot;headerlink&quot; title=&quot;安装 MySql&quot;&gt;&lt;/a&gt;安装 MySql&lt;/h2&gt;&lt;figure class=
      
    
    </summary>
    
    
      <category term="随记" scheme="http://yoursite.com/categories/%E9%9A%8F%E8%AE%B0/"/>
    
    
      <category term="PHP" scheme="http://yoursite.com/tags/PHP/"/>
    
      <category term="LNMP" scheme="http://yoursite.com/tags/LNMP/"/>
    
      <category term="mac" scheme="http://yoursite.com/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>PHP 版本新特性总结</title>
    <link href="http://yoursite.com/2019/10/28/PHP-%E7%89%88%E6%9C%AC%E6%96%B0%E7%89%B9%E6%80%A7%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2019/10/28/PHP-版本新特性总结/</id>
    <published>2019-10-28T07:11:00.000Z</published>
    <updated>2019-11-03T07:09:15.441Z</updated>
    
    <content type="html"><![CDATA[<p>闲来无事，就想着总结一下各个版本特性。然后就有下面的文档</p><h4 id="PHP-5-6-新特性"><a href="#PHP-5-6-新特性" class="headerlink" title="PHP 5.6 新特性"></a>PHP 5.6 新特性</h4><h5 id="使用表达定义常量"><a href="#使用表达定义常量" class="headerlink" title="使用表达定义常量"></a>使用表达定义常量</h5><p>在之前的版本里，必须使用<strong>静态值</strong>来定义常量，声明属性以及制定函数参数默认值。</p><p>现在当前版本可以使用包括<strong>数值、字符串以及其他常量的数值表达式</strong>来定义常量。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> ONE = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> TWP = ONE * <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> TWP;</span><br><span class="line"></span><br><span class="line"><span class="comment">### PHP5.5</span></span><br><span class="line"><span class="comment"># PHP Parse error:  syntax error, unexpected '*'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### 在之后版本</span></span><br><span class="line"><span class="comment"># 2</span></span><br></pre></td></tr></table></figure><h5 id="使用-进行运算"><a href="#使用-进行运算" class="headerlink" title="使用 ** 进行运算"></a>使用 ** 进行运算</h5><p>加入右连接运算符 <code>**</code> 来进行运算，还支持简写的 <code>**=</code> 运算符，表示进行幂运算并赋值</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">$b = <span class="number">2</span> ** <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> $a **= <span class="number">4</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"\r\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="number">2</span> ** <span class="number">3</span> ** <span class="number">2</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"\r\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> $b;</span><br><span class="line"></span><br><span class="line"><span class="comment">### 输出</span></span><br><span class="line"><span class="number">16</span></span><br><span class="line"><span class="number">512</span></span><br><span class="line"><span class="number">8</span></span><br></pre></td></tr></table></figure><blockquote><p>这里讲一下：<code>2 ** 3 ** 2</code> 这个表达式，先给后面的 <code>3 ** 2</code> 进行幂运算，然后才是给前面的进行运算</p></blockquote><h5 id="use-function-以及-use-const"><a href="#use-function-以及-use-const" class="headerlink" title="use function 以及 use const"></a>use function 以及 use const</h5><p><code>use</code> 运算符被进行了扩展，支持了在类中导入外部的函数和常量，对应的结构：<code>use function</code> 和 <code>use const</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">namespace</span> <span class="title">App</span> &#123;</span><br><span class="line">    <span class="title">const</span> <span class="title">FOO</span> = 1;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">test</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="keyword">__FUNCTION__</span> . <span class="string">"\n"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> &#123;</span><br><span class="line">        <span class="title">use</span> <span class="title">const</span> <span class="title">App</span>\<span class="title">FOO</span>;</span><br><span class="line">        <span class="keyword">use</span> <span class="title">function</span> <span class="title">App</span>\<span class="title">test</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">echo</span> FOO.<span class="string">"\r\n"</span>;</span><br><span class="line">        test();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">### 输出</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line">App\test</span><br></pre></td></tr></table></figure><h5 id="php-input-是可重用的"><a href="#php-input-是可重用的" class="headerlink" title="php://input 是可重用的"></a>php://input 是可重用的</h5><p>只要你需要，你可以多次打开并读取 <code>php://input</code> 。</p><h5 id="大文件上传"><a href="#大文件上传" class="headerlink" title="大文件上传"></a>大文件上传</h5><p>现在可以支持大于<strong>2GB</strong>的文件上传</p><h5 id="GMP-支持运算符重载"><a href="#GMP-支持运算符重载" class="headerlink" title="GMP 支持运算符重载"></a>GMP 支持运算符重载</h5><p><a href="https://www.php.net/manual/zh/book.gmp.php" target="_blank" rel="noopener">GMP</a> 支持运算符重载，并且造型成数值类型。</p><blockquote><p> GMP是The GNU MP Bignum Library，是一个开源的数学运算库，它可以用于任意精度的数学运算，包括有符号整数、有理数和浮点数。它本身并没有精度限制，只取决于机器的硬件情况。 </p></blockquote><h5 id="使用-hash-equals-比较字符串避免时序攻击"><a href="#使用-hash-equals-比较字符串避免时序攻击" class="headerlink" title="使用 hash_equals() 比较字符串避免时序攻击"></a>使用 hash_equals() 比较字符串避免时序攻击</h5><p>加入 <a href="https://www.php.net/manual/zh/function.hash-equals.php" target="_blank" rel="noopener">hash_equals()</a> 函数，以恒定的时间消耗来进行字符串比较，以避免时序攻击。比如当比较 <code>crypt()</code> 密码三列值的时候，就可以使用此函数。（<a href="https://www.php.net/manual/zh/function.password-hash.php" target="_blank" rel="noopener">password_hash()</a> 和 <a href="https://www.php.net/manual/zh/function.password-verify.php" target="_blank" rel="noopener">password_verify()</a> 也可以抵抗时序攻击）</p><blockquote><p><strong>时序攻击：</strong>  属于侧信道攻击/旁路攻击(Side Channel Attack)，侧信道攻击是指利用信道外的信息，比如加解密的速度/加解密时芯片引脚的电压/密文传输的流量和途径等进行攻击的方式，一个词形容就是“旁敲侧击” 。</p><p>举一个最简单的计时攻击的例子，某个函数负责比较用户输入的密码和存放在系统内密码是否相同，如果该函数是从第一位开始比较，发现不同就立即返回，那么通过计算返回的速度就知道了大概是哪一位开始不同的，这样就实现了电影中经常出现的按位破解密码的场景。密码破解复杂度成千上万倍甚至百万千万倍的下降。</p></blockquote><h5 id="pgsql-异步支持"><a href="#pgsql-异步支持" class="headerlink" title="pgsql 异步支持"></a>pgsql 异步支持</h5><p><a href="https://www.php.net/manual/zh/book.pgsql.php" target="_blank" rel="noopener">pgsql</a> 扩展现在支持异步方式连接数据库及执行查询，也可以使用非阻塞的方式和 <code>PostgreSQL</code> 数据库进行交互。</p><h4 id="PHP-7-0-新特性"><a href="#PHP-7-0-新特性" class="headerlink" title="PHP 7.0 新特性"></a>PHP 7.0 新特性</h4><h5 id="标量类型声明"><a href="#标量类型声明" class="headerlink" title="标量类型声明"></a>标量类型声明</h5><p>标量 <a href="https://www.php.net/manual/zh/functions.arguments.php#functions.arguments.type-declaration" target="_blank" rel="noopener">类型声明</a> 有两种模式：<strong>强制（默认）</strong>和 <strong>严格模式</strong> 。现在可以使用：字符串、整数、浮点数、布尔值。她们扩充了 PHP5 中引入的其他类型：类名、接口、数组和回调类型。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">sumOfInts</span><span class="params">(int ...$ints)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> array_sum($ints);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var_dump(sumOfInts(<span class="number">2</span>, <span class="string">'3'</span>, <span class="number">4.1</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">### 输出</span></span><br><span class="line">int(<span class="number">9</span>)</span><br></pre></td></tr></table></figure><h5 id="返回值类型声明"><a href="#返回值类型声明" class="headerlink" title="返回值类型声明"></a>返回值类型声明</h5><p>PHP7 增加了对返回类型声明的支持。指明了函数返回值的类型。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">arraysSum</span><span class="params">(array ...$arrays)</span>: <span class="title">array</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> array_map(<span class="function"><span class="keyword">function</span> <span class="params">(array $array)</span>: <span class="title">int</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> array_sum($array);</span><br><span class="line">    &#125;, $arrays);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">print_r(arraysSum([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]));</span><br><span class="line"></span><br><span class="line"><span class="comment">### 输出</span></span><br><span class="line"><span class="keyword">Array</span></span><br><span class="line">(</span><br><span class="line">    [<span class="number">0</span>] =&gt; <span class="number">6</span></span><br><span class="line">    [<span class="number">1</span>] =&gt; <span class="number">15</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><h5 id="null合并运算符"><a href="#null合并运算符" class="headerlink" title="null合并运算符"></a>null合并运算符</h5><p>日常使用中存在大量同时使用三元表达式和 <code>isset()</code> 的情况，PHP7 添加了<strong>null合并运算符（??）</strong> 。如果变量存在且值不为 <strong>NULL</strong> ，它就会返回自身的值，否则返回他的第二个操作数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$username = $_GET[<span class="string">'user'</span>] ?? <span class="string">'nobody'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> $username;</span><br><span class="line"></span><br><span class="line"><span class="comment">##### 输出</span></span><br><span class="line">nobody</span><br></pre></td></tr></table></figure><h5 id="太空船操作符（组合比较符）"><a href="#太空船操作符（组合比较符）" class="headerlink" title="太空船操作符（组合比较符）"></a>太空船操作符（组合比较符）</h5><p>太空船操作符用于比较两个表达式。当 <code>$a</code> 小于、等于或者大于 <code>$b</code> 时他分别返回 -1、0 或 1。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment"># 整数</span></span><br><span class="line"><span class="keyword">echo</span> <span class="number">1</span> &lt;=&gt; <span class="number">2</span>;  <span class="comment">// -1</span></span><br><span class="line"><span class="keyword">echo</span> <span class="number">1</span> &lt;=&gt; <span class="number">1</span>;  <span class="comment">// 0</span></span><br><span class="line"><span class="keyword">echo</span> <span class="number">2</span> &lt;=&gt; <span class="number">1</span>;  <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 浮点数</span></span><br><span class="line"><span class="keyword">echo</span> <span class="number">1.5</span> &lt;=&gt; <span class="number">2.5</span>;  <span class="comment">// -1</span></span><br><span class="line"><span class="keyword">echo</span> <span class="number">1.5</span> &lt;=&gt; <span class="number">1.5</span>;  <span class="comment">// 0</span></span><br><span class="line"><span class="keyword">echo</span> <span class="number">2.5</span> &lt;=&gt; <span class="number">1.5</span>;  <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 整数</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"a"</span> &lt;=&gt; <span class="string">"b"</span>;  <span class="comment">// -1</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"a"</span> &lt;=&gt; <span class="string">"a"</span>;  <span class="comment">// 0</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"b"</span> &lt;=&gt; <span class="string">"a"</span>;  <span class="comment">// 1</span></span><br></pre></td></tr></table></figure><h5 id="通过-define-定义常量数组"><a href="#通过-define-定义常量数组" class="headerlink" title="通过 define() 定义常量数组"></a>通过 define() 定义常量数组</h5><p>Array 类型的常量现在可以通过 <code>define()</code> 来定义。在 PHP 5.6 中仅能通过 <code>const</code> 定义。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">define(<span class="string">'ANIMALS'</span>, [</span><br><span class="line">    <span class="string">'dog'</span>,</span><br><span class="line">    <span class="string">'cat'</span>,</span><br><span class="line">    <span class="string">'bird'</span></span><br><span class="line">]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> ANIMALS[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">### 输出</span></span><br><span class="line">bird</span><br></pre></td></tr></table></figure><h5 id="Closure-call"><a href="#Closure-call" class="headerlink" title="Closure::call()"></a>Closure::call()</h5><p><code>Closure::call()</code> 有着更好的性能，剪短干练的暂时绑定一个方法到对象上闭包并调用它。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $x = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// PHP 7 之前版本的代码</span></span><br><span class="line">$getXCB = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;x;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">$getX = $getXCB-&gt;bindTo(<span class="keyword">new</span> A, <span class="string">'A'</span>); <span class="comment">// 中间层闭包</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// PHP 7+ </span></span><br><span class="line">$getX = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;x;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> $getx-&gt;call(<span class="keyword">new</span> A);</span><br></pre></td></tr></table></figure><h5 id="为-unserialize-提供过滤"><a href="#为-unserialize-提供过滤" class="headerlink" title="为 unserialize() 提供过滤"></a>为 unserialize() 提供过滤</h5><p>这个特性旨在提供更安全的方式解包不可靠的数据。他通过白名单的方式来防止潜在的代码注入。</p><h5 id="预期"><a href="#预期" class="headerlink" title="预期"></a>预期</h5><p><a href="https://www.php.net/manual/zh/function.assert.php#function.assert.expectations" target="_blank" rel="noopener">预期</a> 是向后兼用并增强之前的 <code>assert()</code> 的方法。它使得在生产环境中启用断言为零成本，并提供断言失败时抛出特定异常的能力。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">ini_set(<span class="string">'assert.exception'</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">class CustomError extends AssertionError() &#123;&#125;</span><br><span class="line"></span><br><span class="line">assert(<span class="keyword">false</span>, <span class="keyword">new</span> CustonError(<span class="string">'some error message'</span>));</span><br></pre></td></tr></table></figure><h5 id="Group-use-declarations"><a href="#Group-use-declarations" class="headerlink" title="Group use declarations"></a>Group use declarations</h5><p>从同一个 <code>namespace</code> 导入的类、函数和常量现在可以通过单个 <code>use</code> 语句一次性导入。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">use</span> <span class="title">some</span>\<span class="title">namespace</span>\&#123;<span class="title">ClassA</span>, <span class="title">ClassB</span>, <span class="title">ClassC</span> <span class="title">as</span> <span class="title">C</span>&#125;;</span><br><span class="line"><span class="keyword">use</span> <span class="title">function</span> <span class="title">some</span>\<span class="title">namespace</span>\&#123;<span class="title">fn_a</span>, <span class="title">fn_b</span>, <span class="title">fn_c</span>&#125;;</span><br><span class="line"><span class="keyword">use</span> <span class="title">const</span> <span class="title">some</span>\<span class="title">namespace</span>\&#123;<span class="title">ConstA</span>, <span class="title">ConstB</span>, <span class="title">ConstC</span>&#125;;</span><br></pre></td></tr></table></figure><h5 id="整数除法函数-intdiv"><a href="#整数除法函数-intdiv" class="headerlink" title="整数除法函数 intdiv()"></a>整数除法函数 intdiv()</h5><p><strong>新加</strong>的函数 <code>intdiv()</code> 用来进行整数的除法运算</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">var_dump(intdiv(<span class="number">10</span>, <span class="number">3</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">### 输出</span></span><br><span class="line">int(<span class="number">3</span>)</span><br></pre></td></tr></table></figure><h5 id="会话选项"><a href="#会话选项" class="headerlink" title="会话选项"></a>会话选项</h5><p><a href="https://www.php.net/manual/zh/function.session-start.php" target="_blank" rel="noopener">session_start()</a> 可以接受一个 <code>array</code> 作为参数，用来覆盖 php.ini 文件中设置的<strong>会话配置选项</strong>。</p><h5 id="CSPRNG-Functions"><a href="#CSPRNG-Functions" class="headerlink" title="CSPRNG Functions"></a>CSPRNG Functions</h5><p>新加入两个跨平台的函数：<code>random_bytes()</code> 和 <code>random_int()</code> 用来产生高安全级别的随机字符串和随机整数。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$bty = random_bytes(<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line">var_dump(bin2hex($bty));</span><br><span class="line"></span><br><span class="line">$ints = random_int(<span class="number">1</span>, <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">var_dump($ints);</span><br><span class="line"></span><br><span class="line"><span class="comment">### 输出</span></span><br><span class="line">string(<span class="number">8</span>) <span class="string">"093a14a4"</span></span><br><span class="line">int(<span class="number">746</span>)</span><br></pre></td></tr></table></figure><blockquote><p> <a href="https://www.php.net/manual/zh/function.bin2hex.php" target="_blank" rel="noopener">bin2hex()</a> - 函数把包含数据的二进制字符串转换为十六进制值 </p></blockquote><h5 id="可以使用-list-函数来展开实现了-ArrayAccess-接口的对象"><a href="#可以使用-list-函数来展开实现了-ArrayAccess-接口的对象" class="headerlink" title="可以使用 list() 函数来展开实现了 ArrayAccess 接口的对象"></a>可以使用 list() 函数来展开实现了 ArrayAccess 接口的对象</h5><h4 id="PHP-7-2-新特性"><a href="#PHP-7-2-新特性" class="headerlink" title="PHP 7.2 新特性"></a>PHP 7.2 新特性</h4><h5 id="可为空（Nullable）类型"><a href="#可为空（Nullable）类型" class="headerlink" title="可为空（Nullable）类型"></a>可为空（Nullable）类型</h5><p>参数以及返回值的类型现在可以通过在类型前加上一个问号使之允许为空。当启用这个特性时，传入的参数或者函数返回的结果要么是给定的类型，要么是 null。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">testReturn</span><span class="params">()</span>: ?<span class="title">string</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'elePhPant'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var_dump(testReturn());</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">testReturn1</span><span class="params">()</span>: ?<span class="title">string</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var_dump(testReturn1());</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span><span class="params">(?string $name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    var_dump($name);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">test(<span class="string">'elePHPant'</span>);</span><br><span class="line">test(<span class="keyword">null</span>);</span><br><span class="line">test();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">### 输出</span></span><br><span class="line">string(<span class="number">9</span>) <span class="string">"elePhPant"</span></span><br><span class="line"><span class="keyword">NULL</span></span><br><span class="line">string(<span class="number">9</span>) <span class="string">"elePHPant"</span></span><br><span class="line"><span class="keyword">NULL</span></span><br><span class="line">PHP Fatal error:  Uncaught ArgumentCountError: Too few arguments to <span class="function"><span class="keyword">function</span> <span class="title">test</span><span class="params">()</span>, 0 <span class="title">passed</span></span></span><br></pre></td></tr></table></figure><h5 id="void-函数"><a href="#void-函数" class="headerlink" title="void 函数"></a>void 函数</h5><p>一个新的返回值类型 void 被引入。返回值声明为 void 类型的方法要么干脆省去 return 语句，要么使用一个空的 return 语句。对于 void 函数来说，NULL 不是一个合法的返回值</p><h5 id="Symmetric-array-destructuring"><a href="#Symmetric-array-destructuring" class="headerlink" title="Symmetric array destructuring"></a>Symmetric array destructuring</h5><p>短数组语法（<code>[]</code>）现在作为 <code>list()</code> 语法的一个备选项，可以用于将数组的值赋给一些变量（包括在 foreach 中）。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$data = [</span><br><span class="line">    [<span class="number">1</span>, <span class="string">'Tom'</span>],</span><br><span class="line">    [<span class="number">2</span>, <span class="string">'Fred'</span>]</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用 list()</span></span><br><span class="line"><span class="keyword">list</span>($id1, $name1) = $data[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>($data <span class="keyword">as</span> <span class="keyword">list</span>($ids, $name)) &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用 []</span></span><br><span class="line">[$id1, $name1] = $data[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>($data <span class="keyword">as</span> [$id, $name]) &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="类常量可见性"><a href="#类常量可见性" class="headerlink" title="类常量可见性"></a>类常量可见性</h5><p>现在起支持设置类常量的可见性。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ConstDemo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> PUBLIC_CONST_A = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">const</span> PUBLIC_CONST_B = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">const</span> PROTECTED_CONST = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">const</span> PRIVATE_CONST = <span class="number">4</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="list-现在支持键名"><a href="#list-现在支持键名" class="headerlink" title="list() 现在支持键名"></a>list() 现在支持键名</h5><p>现在 <code>list()</code> 和它的新的 <code>[]</code> 语法支持在它内部指定键名。</p><h5 id="多异常捕获处理"><a href="#多异常捕获处理" class="headerlink" title="多异常捕获处理"></a>多异常捕获处理</h5><p>一个 <code>catch</code> 语句块现在可以通过管道字符 （<code>/</code>）来实现多个异常的捕获。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    </span><br><span class="line">&#125; <span class="keyword">catch</span> (FirstException | SecondException $e) &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="支持为负的字符串偏移量"><a href="#支持为负的字符串偏移量" class="headerlink" title="支持为负的字符串偏移量"></a>支持为负的字符串偏移量</h5><p>现在所有支持偏移量的 <a href="https://www.php.net/manual/zh/book.strings.php" target="_blank" rel="noopener">字符串操作函数</a> 都支持接收负数作为偏移量，包括通过 <code>[]</code> 或 <code>{}</code> 操作字符串下标。在这种情况下，一个负数的偏移量会被理解为一个从字符串结尾开始的偏移量</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">var_dump(<span class="string">"abcdef"</span>[<span class="number">-2</span>]);</span><br><span class="line">var_dump(strpos(<span class="string">"aabbcc"</span>, <span class="string">'b'</span>, <span class="number">-3</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">### 输出</span></span><br><span class="line">string(<span class="number">1</span>) <span class="string">"e"</span></span><br><span class="line">int(<span class="number">3</span>)</span><br></pre></td></tr></table></figure><p>​    </p><p>。。。。。</p><p>PHP7.3、、、PHP7.4。。。官方还没有给出中文文档所以</p><p>之后跟进</p><p><strong><em>文档参考：</em></strong> <a href="https://www.php.net/manual/zh/appendices.php" target="_blank" rel="noopener">PHP官方文档</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;闲来无事，就想着总结一下各个版本特性。然后就有下面的文档&lt;/p&gt;
&lt;h4 id=&quot;PHP-5-6-新特性&quot;&gt;&lt;a href=&quot;#PHP-5-6-新特性&quot; class=&quot;headerlink&quot; title=&quot;PHP 5.6 新特性&quot;&gt;&lt;/a&gt;PHP 5.6 新特性&lt;/h4&gt;&lt;
      
    
    </summary>
    
    
      <category term="随记" scheme="http://yoursite.com/categories/%E9%9A%8F%E8%AE%B0/"/>
    
    
      <category term="PHP" scheme="http://yoursite.com/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>Python 爬坑记-数据库操作</title>
    <link href="http://yoursite.com/2019/09/24/Python-%E7%88%AC%E5%9D%91%E8%AE%B0-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C/"/>
    <id>http://yoursite.com/2019/09/24/Python-爬坑记-数据库操作/</id>
    <published>2019-09-24T03:13:02.000Z</published>
    <updated>2019-11-03T07:09:15.441Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>背景：最近有个小需求，需要爬取某个网站的内容放到数据库，方便其他地方查看使用。所以利用这个时机也学习一下 <code>Python</code> 对数据库的一些操作</p></blockquote><p>从文档可以了解到，<code>Python</code> 的 <code>DB-API</code> 已经为大多数数据库实现了接口。大致流程跟其他语言没啥区别</p><ul><li>引入 <code>API</code> 模块</li><li>连接数据库</li><li>执行 <code>SQL</code> 语句</li><li>关闭数据连接</li></ul><p>这里，我使用 <code>Mysql</code> ，所以我们需要用到 <code>Python</code> 的 <code>MySQLdb</code> 模块</p><h3 id="安装-MySQLdb-模块"><a href="#安装-MySQLdb-模块" class="headerlink" title="安装 MySQLdb 模块"></a>安装 <code>MySQLdb</code> 模块</h3><blockquote><p>我用的是 win10，python 3.7</p></blockquote><p>到 <a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/" target="_blank" rel="noopener"><a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/" target="_blank" rel="noopener">https://www.lfd.uci.edu/~gohlke/pythonlibs/</a></a> ，下载对应系统的版本的 whl 文件，下载完毕之后，到 whl 所在目录执行：<code>pip install mysqlclient-1.4.2-cp37-cp37m-win32.whl</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> pip install mysqlclient-1.4.2-cp37-cp37m-win32.whl</span><br><span class="line">Processing d:\▒▒▒▒\mysqlclient-1.4.2-cp37-cp37m-win32.whl</span><br><span class="line">Installing collected packages: mysqlclient</span><br><span class="line">Successfully installed mysqlclient-1.4.2</span><br></pre></td></tr></table></figure><p>这样就算安装成功了</p><h3 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h3><p>一切都准备就绪，那就可以到代码来了，废话不多说直接上代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> MySQLdb</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line"><span class="comment"># 推荐页面</span></span><br><span class="line">recommUrl = <span class="string">'https://www.gushiwen.org/'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取诗词</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    page = requests.get(recommUrl)</span><br><span class="line"></span><br><span class="line">    soup = BeautifulSoup(page.text, <span class="string">"html.parser"</span>)</span><br><span class="line"></span><br><span class="line">    main3 = soup.find(class_=<span class="string">'main3'</span>)</span><br><span class="line">    left = main3.find(class_=<span class="string">'left'</span>)</span><br><span class="line"></span><br><span class="line">    param = []</span><br><span class="line">    <span class="keyword">for</span> sons <span class="keyword">in</span> left.find_all(<span class="string">'div'</span>, class_=<span class="string">'sons'</span>):</span><br><span class="line">        cont = sons.find(<span class="string">'div'</span>, class_=<span class="string">'cont'</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 标题</span></span><br><span class="line">        title = cont.p.a.get_text()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 朝代 作者</span></span><br><span class="line">        source  = cont.find(<span class="string">'p'</span>, class_=<span class="string">'source'</span>).find_all(<span class="string">'a'</span>)</span><br><span class="line">        dynasty = source[<span class="number">0</span>].get_text()</span><br><span class="line">        author = source[<span class="number">1</span>].get_text()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 内容</span></span><br><span class="line">        contson = cont.find(<span class="string">'div'</span>, class_=<span class="string">'contson'</span>).get_text()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 标签</span></span><br><span class="line">        tagText = <span class="string">''</span></span><br><span class="line">        <span class="keyword">if</span> sons.find(<span class="string">'div'</span>, class_=<span class="string">'tag'</span>) != <span class="literal">None</span>:</span><br><span class="line">            tags = sons.find(<span class="string">'div'</span>, class_=<span class="string">'tag'</span>).find_all(<span class="string">'a'</span>)</span><br><span class="line">            <span class="keyword">for</span> tag <span class="keyword">in</span> tags:</span><br><span class="line">                tagText = tagText + tag.get_text() + <span class="string">','</span></span><br><span class="line">        created_at = updated_at = time.strftime(</span><br><span class="line">            <span class="string">"%Y-%m-%d %H-%M-%S"</span>, time.localtime())</span><br><span class="line">        param.append([title, dynasty, author, contson,</span><br><span class="line">                      tagText, created_at, updated_at])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> param</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">insertDataBases</span><span class="params">(params)</span>:</span></span><br><span class="line">    db  = connectDb()</span><br><span class="line">    cur = db.cursor()</span><br><span class="line"></span><br><span class="line">    sql = <span class="string">'insert into mxp_poetries (title, dynasty, author, content, tags, created_at, updated_at) Values (%s, %s, %s, %s, %s, %s, %s)'</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        cur.executemany(sql, params)</span><br><span class="line">        db.commit()</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> identifier:</span><br><span class="line">        print(identifier)</span><br><span class="line">        db.rollback()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 关闭连接</span></span><br><span class="line">    db.close()</span><br><span class="line">    print(<span class="string">'插入成功'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">connectDb</span><span class="params">()</span>:</span></span><br><span class="line">    db = MySQLdb.connect(host=<span class="string">"127.0.0.1"</span>, port=<span class="number">3306</span>, user=<span class="string">'root'</span>,</span><br><span class="line">                         password=<span class="string">'root'</span>, db=<span class="string">'bl'</span>, charset=<span class="string">"utf8"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> db</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    params = index()</span><br><span class="line">    insertDataBases(params)</span><br></pre></td></tr></table></figure><p>这里我爬取的是一个古诗文的内容，可以看到执行插入的时候我用的 <code>executemany</code> ，而不是 <code>execute</code> ，这样可以同时插入多条，提高性能</p><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><h4 id="问题1"><a href="#问题1" class="headerlink" title="问题1"></a>问题1</h4><blockquote><p>端口问题</p></blockquote><p>代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">db = MySQLdb.connect(host=<span class="string">"127.0.0.1"</span>, port=<span class="string">'3306'</span>, user=<span class="string">'root'</span>, password=<span class="string">'root'</span>,  db=<span class="string">'bl'</span>)</span><br><span class="line">cur = db.cursor()</span><br><span class="line"></span><br><span class="line">sql = <span class="string">'select * from poetries'</span></span><br><span class="line"></span><br><span class="line">cur.execute(sql)</span><br><span class="line"></span><br><span class="line">results = cur.fetchall()</span><br><span class="line"></span><br><span class="line">print(results)</span><br></pre></td></tr></table></figure><p>出现以下代码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File "main.py", line 60, in &lt;module&gt;</span><br><span class="line">    insertDataBases()</span><br><span class="line">  File "main.py", line 47, in insertDataBases</span><br><span class="line">    db = MySQLdb.connect(host="127.0.0.1", port='3306', user='root', password='root', db='blog')</span><br><span class="line">  File "C:\Users\StarFish\AppData\Local\Programs\Python\Python37-32\lib\site-packages\MySQLdb\__init__.py", line 84, in Connect</span><br><span class="line">    return Connection(*args, **kwargs)</span><br><span class="line">  File "C:\Users\StarFish\AppData\Local\Programs\Python\Python37-32\lib\site-packages\MySQLdb\connections.py", line 164, in __init__</span><br><span class="line">    super(Connection, self).__init__(*args, **kwargs2)</span><br><span class="line">TypeError: an integer is required (got type str)</span><br></pre></td></tr></table></figure><p>查看源码之后：</p><p><code>port</code> 是要 <code>int</code> 类型的。好严格啊</p><p>所以端口号改成 <code>int</code> 类型，解决</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">db = MySQLdb.connect(host=<span class="string">"127.0.0.1"</span>, port=<span class="number">3306</span>, user=<span class="string">'root'</span>, password=<span class="string">'root'</span>,  db=<span class="string">'bl'</span>)</span><br><span class="line">cur = db.cursor()</span><br><span class="line"></span><br><span class="line">sql = <span class="string">'select * from poetries'</span></span><br><span class="line"></span><br><span class="line">cur.execute(sql)</span><br><span class="line"></span><br><span class="line">results = cur.fetchall()</span><br><span class="line"></span><br><span class="line">print(results)</span><br></pre></td></tr></table></figure><h4 id="问题2"><a href="#问题2" class="headerlink" title="问题2"></a>问题2</h4><blockquote><p>插入数据，数据库编码跟数据源编码不一样报错</p></blockquote><p><strong>报错信息</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">latin-1' codec can't encode characters in position 0-4: ordinal not in range(256)</span><br></pre></td></tr></table></figure><p><strong>解决</strong></p><p>在连接数据库的时候，先声明编码格式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db = MySQLdb.connect(host=<span class="string">"127.0.0.1"</span>, port=<span class="number">3306</span>, user=<span class="string">'root'</span>,</span><br><span class="line">                         password=<span class="string">'root'</span>, db=<span class="string">'bl'</span>, charset=<span class="string">"utf8"</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;背景：最近有个小需求，需要爬取某个网站的内容放到数据库，方便其他地方查看使用。所以利用这个时机也学习一下 &lt;code&gt;Python&lt;/code&gt; 对数据库的一些操作&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;从文档可以了解到，&lt;code&gt;Pytho
      
    
    </summary>
    
    
      <category term="随记" scheme="http://yoursite.com/categories/%E9%9A%8F%E8%AE%B0/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="Mysql" scheme="http://yoursite.com/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>【已解决】小程序之 canvas 层级问题</title>
    <link href="http://yoursite.com/2019/07/08/%E7%A8%8B%E5%BA%8F%E4%B9%8B-canvas-%E5%B1%82%E7%BA%A7%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2019/07/08/程序之-canvas-层级问题/</id>
    <published>2019-07-08T03:44:26.000Z</published>
    <updated>2019-11-03T07:09:15.442Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>循例交代背景：在使用 <code>canvas</code> 编辑图片，使用添加弹框来自定义添加文字，在微信开发工具上是正常弹窗不会被挡到，到手机上测试，发现弹框一直会在 <code>canvas</code> 组件后面</p></blockquote><p>在官方文档中可以看到 <a href="https://developers.weixin.qq.com/miniprogram/dev/component/native-component.html" target="_blank" rel="noopener">原生组件说明</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. 原生组件的层级是最高的，所以页面中的其他组件无论设置 z-index 为多少，都无法盖在原生组件上</span><br><span class="line">2. 原生组件还无法在 picker-view 中使用。</span><br><span class="line">3. 部分CSS样式无法应用于原生组件</span><br><span class="line">4. 原生组件的事件监听不能使用 bind:eventname 的写法，只支持 bindeventname。原生组件也不支持 catch 和 capture 的事件绑定方式。</span><br><span class="line">5. 原生组件会遮挡 vConsole 弹出的调试面板。 在工具上，原生组件是用web组件模拟的，因此很多情况并不能很好的还原真机的表现，建议开发者在使用到原生组件时尽量在真机上进行调试。</span><br></pre></td></tr></table></figure><p>这就知道了为什么弹框会一直被挡住了，在小程序里面，原生组件的层级最高。</p><p>虽然提供了 <code>cover-view</code> 和 <code>cover-image</code> 组件，可以覆盖在原生组件上。但是不符合我的业务逻辑，我就没有用，在 <code>google</code> 之后，很多方式都是首先 <code>canvas</code>  组件转换为临时图片，然后用 <code>&lt;image&gt;&lt;/image&gt;</code> 将图片显示出来，但是这样无法继续编辑 <code>canvas</code> 。</p><p>所以我想了用将 <code>canvas</code> 和 <code>imgae</code> 一起用，代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">## .wxml</span><br><span class="line"></span><br><span class="line">&lt;view&gt;</span><br><span class="line">    &lt;canvas-drag class=&quot;&#123;&#123;radarImg ? &apos;gun&apos; : &apos;&apos;&#125;&#125;&quot; id=&quot;canvas-drag&quot; graph=&quot;&#123;&#123;graph&#125;&#125;&quot; width=&quot;750&quot; height=&quot;1030&quot;&gt;</span><br><span class="line">    &lt;/canvas-drag&gt;</span><br><span class="line">    &lt;image class=&quot;&#123;&#123;!radarImg ? &apos;gun&apos; : &apos;&apos;&#125;&#125; radarImg&quot; src=&apos;&#123;&#123;radarImg&#125;&#125;&apos;&gt;&lt;/image&gt;</span><br><span class="line"></span><br><span class="line">    &lt;view class=&quot;btn&quot; bindtap=&quot;showModal&quot;&gt;添加文字&lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br></pre></td></tr></table></figure><blockquote><p>一开始不需要 <code>image</code> 组件，所以我们让他 <code>.gun</code>  到屏幕外面去了。同样，需要用到 <code>image</code>  的时候，我们会让 <code>canvas</code> 也 <code>.gun</code>  出屏幕外去</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">## .wxss</span><br><span class="line"></span><br><span class="line">.radarImg &#123;</span><br><span class="line">    width: 750rpx;</span><br><span class="line">    height: 1030rpx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.gun &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">    left: -999px;</span><br><span class="line">    top: -0px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>在点击 <code>添加文字</code>  的时候，然后保存成临时文件，放到 image 组件里去，canvas 组件隐藏，弹出弹框</p></blockquote><blockquote><p>点击确定，canvas 组件重新回来</p></blockquote><p>这样可以重新编辑，也可以弹框</p><p><em>主要是提供一个思路，有什么不对也欢迎大家向我反馈，请多指教</em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;循例交代背景：在使用 &lt;code&gt;canvas&lt;/code&gt; 编辑图片，使用添加弹框来自定义添加文字，在微信开发工具上是正常弹窗不会被挡到，到手机上测试，发现弹框一直会在 &lt;code&gt;canvas&lt;/code&gt; 组件后面&lt;/p&gt;
&lt;/blockqu
      
    
    </summary>
    
    
      <category term="随记" scheme="http://yoursite.com/categories/%E9%9A%8F%E8%AE%B0/"/>
    
    
      <category term="小程序" scheme="http://yoursite.com/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>工作流</title>
    <link href="http://yoursite.com/2019/06/17/%E5%B7%A5%E4%BD%9C%E6%B5%81/"/>
    <id>http://yoursite.com/2019/06/17/工作流/</id>
    <published>2019-06-17T03:43:08.000Z</published>
    <updated>2019-11-03T07:09:15.442Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>一些比较实用的工具，插件</p></blockquote><h5 id="vim"><a href="#vim" class="headerlink" title="vim"></a>vim</h5><p>自动配置 vim</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/amix/vimrc.git ~/.vim_runtime</span><br><span class="line">sh ~/.vim_runtime/install_awesome_vimrc.sh</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> update</span></span><br><span class="line">cd ~/.vim_runtime</span><br><span class="line">git pull --rebase</span><br></pre></td></tr></table></figure><h5 id="oh-my-zsh"><a href="#oh-my-zsh" class="headerlink" title="oh-my-zsh"></a>oh-my-zsh</h5><p>安装 zsh</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install zsh</span><br><span class="line">sudo apt install zsh</span><br></pre></td></tr></table></figure><p>wget 自动安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh</span><br></pre></td></tr></table></figure><p>执行完毕后，zhs 基本已经配置完成，只要切换到 zsh 模式就行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chsh -s /usr/bin/zsh</span><br></pre></td></tr></table></figure><p> 自己的配置 <code>.zshrc</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">plugins=(</span><br><span class="line">   git</span><br><span class="line">   catimg</span><br><span class="line">   wd</span><br><span class="line">   history</span><br><span class="line">   zsh-history-substring-search</span><br><span class="line">   zsh-autosuggestions</span><br><span class="line"> )</span><br><span class="line"> </span><br><span class="line"> setopt AUTOLIST</span><br><span class="line"> setopt AUTOMENU</span><br><span class="line"> </span><br><span class="line"> // $PATH 你自己本地文件的路径</span><br><span class="line"> source  $PATH/incr-0.2.zsh</span><br><span class="line"> </span><br><span class="line"> alias gst=&quot;git status&quot;</span><br><span class="line"> alias gc=&quot;git checkout&quot;</span><br><span class="line"> alias gam=&quot;git add . &amp;&amp; git commit -m&quot;</span><br><span class="line"> alias gpull=&quot;git pull origin&quot;</span><br><span class="line"> alias gpush=&quot;git push origin&quot;</span><br><span class="line"> alias gfetch=&quot;git fetch origin&quot;</span><br><span class="line"> alias gdf=&quot;git diff&quot;</span><br><span class="line"> alias gl=&quot;git log --graph --pretty=format:&apos;%C(yellow)%h%Creset %C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset&apos; --abbrev-commit --date=short --all&quot;</span><br><span class="line"> alias gm=&quot;git merge&quot;</span><br><span class="line"> </span><br><span class="line"> alias subl=&quot;LD_PRELOAD=/opt/sublime_text/libsublime-imfix.so subl&quot;</span><br><span class="line"> </span><br><span class="line"> alias tflog=&quot;tail -f storage/logs/laravel.log | grep&quot;</span><br><span class="line"> </span><br><span class="line"> alias szsh=&quot;source ~/.zshrc&quot;</span><br><span class="line"> alias vzsh=&quot;vim ~/.zshrc&quot;</span><br></pre></td></tr></table></figure><blockquote><p>配置有这个 <a href="http://mimosa-pudica.net/zsh-incremental.html" target="_blank" rel="noopener">incr-0.2.zsh</a> 补全插件， 它能让你在zsh 模式下全自动补全指令或目录</p></blockquote><h5 id="lantern"><a href="#lantern" class="headerlink" title="lantern"></a>lantern</h5><p>下载网址 <a href="https://github.com/getlantern/lantern" target="_blank" rel="noopener">lantern</a></p><h5 id="shadowsocks"><a href="#shadowsocks" class="headerlink" title="shadowsocks"></a>shadowsocks</h5><p>windows 版本下载地址: <a href="https://github.com/shadowsocks/shadowsocks-windows/releases" target="_blank" rel="noopener">https://github.com/shadowsocks/shadowsocks-windows/releases</a></p><p>Linux 版本:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip install shadowsocks</span><br><span class="line">apt-get install shadowsocks-libev</span><br><span class="line">cpan Net:Shadowsocks</span><br></pre></td></tr></table></figure><h5 id="sublime-Text-3"><a href="#sublime-Text-3" class="headerlink" title="sublime Text 3"></a>sublime Text 3</h5><p>安装 <code>Package Control</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)</span><br></pre></td></tr></table></figure><p><strong>ctrl + `</strong>  呼出命令框，复制上面的代码，回车 ，等待安装成功</p><p>插件</p><p><code>ConvertToUTF8</code>    </p><blockquote><p>支持 GBK, BIG5, EUC-KR, EUC-JP, Shift_JIS 等编码的插件</p></blockquote><p><code>Bracket Highlighter</code> </p><blockquote><p>用于匹配括号，引号和html标签。对于很长的代码很有用。安装好之后，不需要设置插件会自动生效</p></blockquote><p><code>DocBlockr</code> </p><blockquote><p>可以自动生成PHPDoc风格的注释。它支持的语言有Javascript, PHP, ActionScript, CoffeeScript, Java, Objective C, C, C++</p></blockquote><p><code>Emmet</code>      </p><blockquote><p>快速生成HTML代码段的插件</p></blockquote><p><code>SideBar Enhancements</code>  </p><blockquote><p>改进了侧边栏，增加了许多功能</p></blockquote><p><code>All Autocomplete</code></p><blockquote><p>t默认的自动完成只关注当前文件的单词。这个插件扩展了其自动完成的单词列表到所有打开的文件（请注意，这是所有<strong>打开</strong>的文件）</p></blockquote><p><code>Git</code></p><p><code>GitGutter</code></p><blockquote><p>会在你最后一次提交GIt后显示出有哪些行是被改动过的</p></blockquote><p><code>AutoFileName</code></p><blockquote><p>自动完成文件名的输入</p></blockquote><p><strong>输入中文</strong></p><p>下载需要的文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/lyfeyaj/sublime-text-imfix.git</span><br></pre></td></tr></table></figure><p>将 <code>subl</code> 移动到 <code>/usr/bin/</code> ，并且将 <code>sublime-imfix.so</code> 移动到 <code>/opt/sublime_text/</code>（sublime的安装目录）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd ~/sublime-text-imfix</span><br><span class="line">sudo cp ./lib/libsublime-imfix.so /opt/sublime_text/</span><br><span class="line">sudo cp ./src/subl /usr/bin/</span><br></pre></td></tr></table></figure><p>启动sublime，如果成功启动的话，应该就可以输入中文了。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LD_PRELOAD=./libsublime-imfix.so subl</span><br></pre></td></tr></table></figure><p><strong>解决中英文上下错位</strong></p><blockquote><p>Yahei Consolas Hybrid 是一种合成字体，是由微软雅黑的中文字体和 Consolas 的英文字体合成的，Consolas 字体是微软专为程序员开发的一种字体，但没有中文支持，所以 Yahei Consolas Hybrid 这种字体特别适合中英文的编程开发，代码编写</p></blockquote><p>可以使用git库快速安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/cypro666/yahei.consolas-font.git</span><br><span class="line">cd yahei.consolas-font</span><br><span class="line">./install.sh</span><br></pre></td></tr></table></figure><p>当git库不可用, 可以直接使用命令安装字体</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /usr/share/fonts/consolas</span><br><span class="line">sudo cp ./*.ttf /usr/share/fonts/consolas</span><br><span class="line">cd /usr/share/fonts/consolas</span><br><span class="line">sudo chmod 644 *.ttf</span><br><span class="line">sudo mkfontdir</span><br><span class="line">sudo mkfontscale</span><br><span class="line">sudo fc-cache -fv</span><br><span class="line">sudo fc-list|grep "YaHei Consolas Hybrid"</span><br></pre></td></tr></table></figure><p>之后, 在<code>sublime text 3</code> 的配置文件中添加</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">"font_face":"Yahei Consolas Hybrid"</span><br></pre></td></tr></table></figure><h5 id="VS-Code"><a href="#VS-Code" class="headerlink" title="VS Code"></a>VS Code</h5><p>下载 <a href="https://marketplace.visualstudio.com/items?itemName=Shan.code-settings-sync" target="_blank" rel="noopener">Setting Sync</a> 统一设置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GitHub Token: 6a006c24ea62*******d357ab676c88f</span><br><span class="line">GitHub Gist: a9a6694d86********aacd38ba4133b</span><br><span class="line">GitHub Gist Type: Secret</span><br></pre></td></tr></table></figure><p>常用扩展</p><ul><li>Better Align</li><li>Bootstrap 4, Font awesome 4, Font Awesome 5 Free &amp; Pro snippets</li><li>Bracket Pair Colorizer</li><li>Chinese (Simplified) Language Pack for Visual Studio Code</li><li>Document This</li><li>DotENV</li><li>HTML CSS Support</li><li>HTML Snippets</li><li>IntelliSense for CSS, SCSS class names in HTML, Slim and SCSS</li><li>laravel-5-snippets</li><li>Laravel Blade Snippets</li><li>Laravel goto view</li><li>PHP DocBlocker</li><li>PHP Intelephense</li><li>PHP IntelliSense</li><li>SQL Server (mssql)</li><li>vscode-icons</li></ul><h5 id="github-API"><a href="#github-API" class="headerlink" title="github API"></a>github API</h5><p><strong>yii</strong> token: fce4f41d8<strong><strong><strong><strong>**</strong></strong></strong></strong>43246ddf </p><h5 id="小孩便签"><a href="#小孩便签" class="headerlink" title="小孩便签"></a>小孩便签</h5><blockquote><p>该软件完全模仿了日常生活中的纸质便签，所有操作简单快捷，一目了然。您可以将它作为工作提醒、记录您日常生活琐事等等。</p></blockquote><p><a href="http://www.notesmaker.com/call.html" target="_blank" rel="noopener">下载地址</a></p><h5 id="Capslock"><a href="#Capslock" class="headerlink" title="Capslock+"></a>Capslock+</h5><blockquote><p>Capslock+是一个加强 Capslock 键的功能，以提高效率的工具。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Capslock+E / D / S / F（上 / 下 / 左 / 右）</span><br><span class="line">Capslock+I / K / J / L（上 / 下 / 左 / 右选中文字）</span><br><span class="line">Capslock+w / r（向左 / 右删除文字）</span><br><span class="line">Capslock+A / G（光标向左 / 右跳一个单词，对英文、代码特别有用）</span><br><span class="line">Capslock+; / P（移动光标至行首 / 行末）</span><br><span class="line">Capslock+U / O（选中光标至行首 / 行末文字）</span><br><span class="line">Capslock+Backspace（删除光标所在行所有文字）</span><br><span class="line">Capslock+Enter（无论光标是否在行末都能新起一个换行而不截断原句子）</span><br><span class="line">....</span><br></pre></td></tr></table></figure><p><a href="https://cjkis.me/capslock+/" target="_blank" rel="noopener">下载地址</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;一些比较实用的工具，插件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;vim&quot;&gt;&lt;a href=&quot;#vim&quot; class=&quot;headerlink&quot; title=&quot;vim&quot;&gt;&lt;/a&gt;vim&lt;/h5&gt;&lt;p&gt;自动配置 vim&lt;/p&gt;
&lt;figur
      
    
    </summary>
    
    
      <category term="随记" scheme="http://yoursite.com/categories/%E9%9A%8F%E8%AE%B0/"/>
    
    
      <category term="工具" scheme="http://yoursite.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="插件" scheme="http://yoursite.com/tags/%E6%8F%92%E4%BB%B6/"/>
    
      <category term="效率" scheme="http://yoursite.com/tags/%E6%95%88%E7%8E%87/"/>
    
  </entry>
  
  <entry>
    <title>YiiChina网站每天自动签到脚本（Python）</title>
    <link href="http://yoursite.com/2019/05/18/YiiChina%E7%BD%91%E7%AB%99%E6%AF%8F%E5%A4%A9%E8%87%AA%E5%8A%A8%E7%AD%BE%E5%88%B0%E8%84%9A%E6%9C%AC%EF%BC%88Python%EF%BC%89/"/>
    <id>http://yoursite.com/2019/05/18/YiiChina网站每天自动签到脚本（Python）/</id>
    <published>2019-05-18T01:09:41.000Z</published>
    <updated>2019-11-03T07:09:15.441Z</updated>
    
    <content type="html"><![CDATA[<p>刚好最近工作需要使用 <code>yii</code>  这个框架，那必不可少的会经常逛 <a href="https://www.yiichina.com" target="_blank" rel="noopener">YII 中文网</a> 这个网站，也就注册了会员，然后就有每日签到这个东西啦。本着能不动手就尽量不动手的原则。使用了不是很熟练的 <code>Python</code> 语言来写这个脚本。</p><p>其实，也很简单，就一个登陆操作和一个签到操作。废话不多说，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 构造签到的header头</span></span><br><span class="line">headers2 = &#123;</span><br><span class="line">    <span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36"</span>,</span><br><span class="line">    <span class="string">'X-Requested-With'</span>: <span class="string">"XMLHttpRequest"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">logUrl  = <span class="string">"https://www.yiichina.com/login"</span></span><br><span class="line">signUrl = <span class="string">"https://www.yiichina.com/registration"</span></span><br><span class="line">r_session = requests.Session()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sign</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 登陆部分</span></span><br><span class="line">    page = r_session.get(logUrl)</span><br><span class="line"></span><br><span class="line">    soup = BeautifulSoup(page.text, (<span class="string">"html.parser"</span>))</span><br><span class="line"></span><br><span class="line">    _csrf = soup.find(<span class="string">'input'</span>, &#123;<span class="string">'name'</span>: <span class="string">'_csrf'</span>&#125;).attrs[<span class="string">'value'</span>]</span><br><span class="line"></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">"_csrf"</span>: _csrf,</span><br><span class="line">        <span class="string">"LoginForm[username]"</span> : <span class="string">"********@qq.com"</span>, <span class="comment"># 换成自己的帐号</span></span><br><span class="line">        <span class="string">"LoginForm[password]"</span> : <span class="string">"*******"</span>,   <span class="comment"># 换成自己的密码</span></span><br><span class="line">        <span class="string">"LoginForm[rememberMe]"</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="string">"LoginForm[rememberMe]"</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="string">"login-button"</span>: <span class="string">""</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    r_session.post(logUrl, data=data, headers=headers)</span><br><span class="line">    <span class="comment"># print(r_session.get('https://www.yiichina.com/user').text)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 签到部分</span></span><br><span class="line">    page2 = r_session.get(signUrl)</span><br><span class="line"></span><br><span class="line">    soupSign = BeautifulSoup(page2.text, (<span class="string">"html.parser"</span>))</span><br><span class="line"></span><br><span class="line">    _csrf2 = soupSign.find(<span class="string">'meta'</span>, &#123;<span class="string">"name"</span>: <span class="string">"csrf-token"</span>&#125;).attrs[<span class="string">'content'</span>]</span><br><span class="line"></span><br><span class="line">    signData  = &#123;</span><br><span class="line">        <span class="string">"_csrf"</span> : _csrf2</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    r_session.post(signUrl, data=signData, headers=headers2)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    sign()</span><br></pre></td></tr></table></figure><p>都说是<strong>自动</strong>，那肯定就不止这个脚本的。</p><p>这里使用 Linux 的<strong>定时任务</strong>，不清楚的先直接  google 一下</p><p>使用 <code>crontab -e</code> 进入编辑模式，把下面的命令添加到里面去</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 每天早上九点自动签到 yii</span><br><span class="line">0 9 * * * /usr/bin/python3.6 ~/yii_sign.py &gt; /dev/null 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><blockquote><p>要使用自己相对应的路径</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;刚好最近工作需要使用 &lt;code&gt;yii&lt;/code&gt;  这个框架，那必不可少的会经常逛 &lt;a href=&quot;https://www.yiichina.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;YII 中文网&lt;/a&gt; 这个网站，也就注册了会员，然
      
    
    </summary>
    
    
      <category term="随记" scheme="http://yoursite.com/categories/%E9%9A%8F%E8%AE%B0/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="脚本" scheme="http://yoursite.com/tags/%E8%84%9A%E6%9C%AC/"/>
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>window_navicat连接远程服务器数据库</title>
    <link href="http://yoursite.com/2019/05/15/window-navicat%E8%BF%9E%E6%8E%A5%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <id>http://yoursite.com/2019/05/15/window-navicat连接远程服务器数据库/</id>
    <published>2019-05-15T02:09:44.000Z</published>
    <updated>2019-11-03T07:09:15.441Z</updated>
    
    <content type="html"><![CDATA[<h2 id="window-mysql管理器-Navicat-Premium-连接-服务器-linux-数据库"><a href="#window-mysql管理器-Navicat-Premium-连接-服务器-linux-数据库" class="headerlink" title="window mysql管理器(Navicat Premium) 连接 服务器(linux)数据库"></a>window mysql管理器(Navicat Premium) 连接 服务器(linux)数据库</h2><p>在服务端进入 <code>mysql</code> 之后执行以下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GRANT ALL PRIVILEGES ON *.* TO &apos;USER&apos;@&apos;IP&apos; IDENTIFIED BY &apos;PASSWORD&apos; WITH GRANT OPTION;</span><br><span class="line">FLUSH PRIVILEGES;</span><br><span class="line">use mysql;</span><br><span class="line">select host, user from user;</span><br><span class="line">exit;</span><br></pre></td></tr></table></figure><blockquote><p>其中， IP 和 PASSWORD 可以自定义，USER 是 mysql.user 中存在的用户。完成后：</p><p>重启 MySQL</p><p>防火墙放行 3306</p><p><strong>注意：IP可以设置为%，%表示无限制主机</strong></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 放行3306端口</span><br><span class="line">/sbin/iptables -I INPUT -p tcp --dport 3306 -j ACCEPT</span><br><span class="line"></span><br><span class="line">service iptables save</span><br><span class="line">service iptables restart</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;window-mysql管理器-Navicat-Premium-连接-服务器-linux-数据库&quot;&gt;&lt;a href=&quot;#window-mysql管理器-Navicat-Premium-连接-服务器-linux-数据库&quot; class=&quot;headerlink&quot; tit
      
    
    </summary>
    
    
      <category term="随记" scheme="http://yoursite.com/categories/%E9%9A%8F%E8%AE%B0/"/>
    
    
      <category term="Mysql" scheme="http://yoursite.com/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>修改 php 代码的时候总是需要等一分多钟才能生效，可能是 Zend OPcache的锅</title>
    <link href="http://yoursite.com/2019/04/28/%E4%BF%AE%E6%94%B9-php-%E4%BB%A3%E7%A0%81%E7%9A%84%E6%97%B6%E5%80%99%E6%80%BB%E6%98%AF%E9%9C%80%E8%A6%81%E7%AD%89%E4%B8%80%E5%88%86%E5%A4%9A%E9%92%9F%E6%89%8D%E8%83%BD%E7%94%9F%E6%95%88%EF%BC%8C%E5%8F%AF%E8%83%BD%E6%98%AF-Zend-OPcache%E7%9A%84%E9%94%85/"/>
    <id>http://yoursite.com/2019/04/28/修改-php-代码的时候总是需要等一分多钟才能生效，可能是-Zend-OPcache的锅/</id>
    <published>2019-04-28T09:11:56.000Z</published>
    <updated>2019-11-03T07:09:15.442Z</updated>
    
    <content type="html"><![CDATA[<p><strong>背景：</strong> 一直在 oneinstack  的集成环境下开发，每次修改 php 代码的时候总是需要等一分多钟才能生效。一分多钟啊！！！！！</p><p>无论怎么强制刷新浏览器，还有清除浏览器的访问记录，开启 Chrome 的隐身模式，一切能删除清楚缓存的方式都尝试了一遍。</p><p>发现都没有用没有用没有用！！</p><p>今天，终于受不了，google 了大半天，都是修改 nginx 服务，但都没有用！</p><p>终于在一个大神的提醒下，发现了 <strong>Zend OPcache</strong> 这个大坑，原来一直都是这个东西在搞鬼</p><p>官方简介：OPcache 通过将 PHP 脚本预编译的字节码存储到共享内存中来提升 PHP 的性能， 存储预编译字节码的好处就是 省去了每次加载和解析 PHP 脚本的开销</p><p>存错到内存里去内存里去啊啊啊啊，难怪怎么清楚缓存都没用</p><p>在调试应用阶段，不需要使用 PHP 的缓存，因为提交修改后要1分钟后才生效</p><p>它默认是关掉的，不知道是不是 oneinstack 这个锅，其他集成环境不会出现这情况</p><p>所以立马就把这个 ×× 东西给关掉</p><p>打开 <code>phpinfo()</code>  ，在输入内容中查看opcache部分，可以看到它的配置文件，我的是在 <code>/usr/local/php/etc/php.d/ext-opcache.ini</code>  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[opcache]</span><br><span class="line">zend_extension=opcache.so</span><br><span class="line">opcache.enable=0</span><br><span class="line">opcache.memory_consumption=384</span><br><span class="line">opcache.interned_strings_buffer=8</span><br><span class="line">opcache.max_accelerated_files=4000</span><br><span class="line">opcache.revalidate_freq=60</span><br><span class="line">opcache.save_comments=0</span><br><span class="line">opcache.fast_shutdown=1</span><br><span class="line">opcache.enable_cli=0</span><br><span class="line">;opcache.optimization_level=0</span><br></pre></td></tr></table></figure><p>把 <code>opcache.enable</code>  、<code>opcache.enable_cli</code>  的值改成 0 就行</p><p>重启apache即可。如果你用的是nginx + php-fpm ,那么你就重启你的php-fpm</p><p>终于不用再傻傻得等一分多钟了！！！！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;背景：&lt;/strong&gt; 一直在 oneinstack  的集成环境下开发，每次修改 php 代码的时候总是需要等一分多钟才能生效。一分多钟啊！！！！！&lt;/p&gt;
&lt;p&gt;无论怎么强制刷新浏览器，还有清除浏览器的访问记录，开启 Chrome 的隐身模式，一切能删
      
    
    </summary>
    
    
      <category term="PHP" scheme="http://yoursite.com/categories/PHP/"/>
    
    
      <category term="PHP" scheme="http://yoursite.com/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>微信公众号开发之客服消息</title>
    <link href="http://yoursite.com/2019/04/19/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E5%BC%80%E5%8F%91%E4%B9%8B%E5%AE%A2%E6%9C%8D%E6%B6%88%E6%81%AF/"/>
    <id>http://yoursite.com/2019/04/19/微信公众号开发之客服消息/</id>
    <published>2019-04-19T07:54:35.000Z</published>
    <updated>2019-11-03T07:09:15.442Z</updated>
    
    <content type="html"><![CDATA[<p>完整代码地址： <a href="https://github.com/zhengkx/weChat-development" target="_blank" rel="noopener">微信公众号开发之客服消息</a></p><h3 id="一、接入微信公众号平台"><a href="#一、接入微信公众号平台" class="headerlink" title="一、接入微信公众号平台"></a>一、接入微信公众号平台</h3><ul><li><p>*<em>从后台得到 <code>appID</code> 、<code>appsecret</code>， 以及自己填写的 <code>token</code>  *</em></p></li><li><p><strong>通过微信服务器的验证</strong></p><blockquote><p>开发者提交信息后，微信服务器将发送 <code>GET</code> 请求到填写的服务器地址 <code>URL</code> 上，会携带参数 <code>signature</code>、 <code>timestamp</code>、 <code>nonce</code>、 <code>echostr</code></p></blockquote><p>根据开发文档给的校验方式， 校验是否由微信服务器发送的请求，确认之后发送 <code>echostr</code> 参数，则接入成功，代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$wechat = <span class="keyword">new</span> wechatCallBack();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'echostr'</span>])) &#123;</span><br><span class="line">    $wechat-&gt;checkSignature();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">wechatCallBack</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $appid  = <span class="string">'wx35*****48137'</span>;</span><br><span class="line">    <span class="keyword">public</span> $sercet = <span class="string">'dd227*******aefaf4'</span>;</span><br><span class="line">    <span class="keyword">public</span> $token  = <span class="string">'token'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 检验签名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkSignature</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 获得参数 signature nonce token timestamp echostr</span></span><br><span class="line">        $nonce     = $_GET[<span class="string">'nonce'</span>];</span><br><span class="line">        $timestamp = $_GET[<span class="string">'timestamp'</span>];</span><br><span class="line">        $echostr   = $_GET[<span class="string">'echostr'</span>];</span><br><span class="line">        $signature = $_GET[<span class="string">'signature'</span>];</span><br><span class="line"></span><br><span class="line">        $array = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line">        $array = <span class="keyword">array</span>($nonce, $timestamp, <span class="keyword">$this</span>-&gt;token);</span><br><span class="line"></span><br><span class="line">        sort($array);</span><br><span class="line"></span><br><span class="line">        $str = sha1(implode($array));</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> ($str == $signature) &#123;</span><br><span class="line">            <span class="keyword">echo</span>  $echostr;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">exit</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="二、获取-access-token"><a href="#二、获取-access-token" class="headerlink" title="二、获取 access_token"></a>二、获取 <code>access_token</code></h3><blockquote><p><code>access_token</code> 是公众号的全局唯一接口调用凭据，公众号调用各接口时都需使用 <code>access_token</code> 。开发者需要进行妥善保存。<code>access_token</code> 的存储至少要保留512个字符空间。<code>access_token</code> 的有效期目前为2个小时，需定时刷新，重复获取将导致上次获取的 <code>access_token</code> 失效。</p></blockquote><p>代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getAccessToken</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($_SESSION[<span class="string">'access_token'</span>]) &amp;&amp; time() &lt; $_SESSION[<span class="string">'expires_time'</span>]) &#123;</span><br><span class="line">        <span class="keyword">return</span> $_SESSION[<span class="string">'access_token'</span>];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $url = <span class="string">"https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=$this-&gt;appid&amp;secret=$this-&gt;sercet"</span>;</span><br><span class="line"></span><br><span class="line">        $res = <span class="keyword">$this</span>-&gt;getHttp($url);</span><br><span class="line"></span><br><span class="line">        $resArr = json_decode($res, <span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>($resArr[<span class="string">'access_token'</span>])) &#123;</span><br><span class="line">            $_SESSION[<span class="string">'access_token'</span>] = $resArr[<span class="string">'access_token'</span>];</span><br><span class="line">            $_SESSION[<span class="string">'expires_time'</span>] = time() + $resArr[<span class="string">'expires_in'</span>];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> $resArr[<span class="string">'access_token'</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三、对接客服消息"><a href="#三、对接客服消息" class="headerlink" title="三、对接客服消息"></a>三、对接客服消息</h3><p>有了上面的 <code>access_token</code> ，接下来就可以对接 <strong>客服消息</strong></p><blockquote><p>当用户和公众号产生特定动作的交互时，微信将会把消息数据推送给开发者，开发者可以在一段时间内（目前修改为48小时）调用客服接口，通过 POST 一个 JSON 数据包来发送消息给普通用户。此接口主要用于客服等有人工消息处理环节的功能，方便开发者为用户提供更加优质的服务。</p></blockquote><h4 id="1-客服帐号管理"><a href="#1-客服帐号管理" class="headerlink" title="1. 客服帐号管理"></a>1. 客服帐号管理</h4><p><strong>添加客服帐号</strong></p><p><strong>修改客服帐号</strong></p><p><strong>删除客服账号</strong></p><p><strong>设置客服账号的头像</strong></p><p><strong>获取所有客服账号</strong></p><p>以上接口，可能测试号没有权限操作，一直返回以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;errcode&quot;:65400,&quot;errmsg&quot;:&quot;please enable new custom service, or wait for a while if you have enabled hint: [g7c2tA05131503]&quot;&#125;</span><br></pre></td></tr></table></figure><p>查了好久，没有找到为什么，那就归到官方不开放吧，等以后搞到个认证过的公众号再来补充了。</p><h4 id="2-客服发送接口"><a href="#2-客服发送接口" class="headerlink" title="2. 客服发送接口"></a>2. 客服发送接口</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送客服消息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sendCustomerMsg</span><span class="params">($obj)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $accessToken = <span class="keyword">$this</span>-&gt;getAccessToken();</span><br><span class="line"></span><br><span class="line">        $url = <span class="string">"https://api.weixin.qq.com/cgi-bin/message/custom/send?access_token=$accessToken"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 不指定某个客服回复</span></span><br><span class="line">        $postData = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'touser'</span>  =&gt; <span class="string">"$obj-&gt;FromUserName"</span>,</span><br><span class="line">            <span class="string">'msgtype'</span> =&gt; <span class="string">'text'</span>,</span><br><span class="line">            <span class="string">'text'</span>    =&gt; <span class="keyword">array</span> (</span><br><span class="line">                <span class="string">'content'</span> =&gt; <span class="string">'Hello a'</span>,</span><br><span class="line">            )</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 指定某个客服回复</span></span><br><span class="line">        <span class="comment">// $postData = array(</span></span><br><span class="line">        <span class="comment">//     'touser'  =&gt; "$obj-&gt;FromUserName",</span></span><br><span class="line">        <span class="comment">//     'msgtype' =&gt; 'text',</span></span><br><span class="line">        <span class="comment">//     'customservice' =&gt; array(</span></span><br><span class="line">        <span class="comment">//         "kf_account" =&gt; "test1@kftest"</span></span><br><span class="line">        <span class="comment">//     ),</span></span><br><span class="line">        <span class="comment">//     'text'    =&gt; array(</span></span><br><span class="line">        <span class="comment">//         'content' =&gt; 'Hello a',</span></span><br><span class="line">        <span class="comment">//     )</span></span><br><span class="line">        <span class="comment">// );</span></span><br><span class="line"></span><br><span class="line">        $res = <span class="keyword">$this</span>-&gt;postHttp($url, json_encode($postData));</span><br><span class="line"></span><br><span class="line">        $resArr = json_decode($res, <span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>($resArr[<span class="string">'errcode'</span>]) &amp;&amp; $resArr[<span class="string">'errcode'</span>] == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;logger(<span class="string">"\r\n"</span> . <span class="string">'发送成功'</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;logger(<span class="string">"\r\n"</span> . $res);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>我这边是由一个自定义菜单 <code>在线客服</code> 按钮触发客服接口，你也可以自己设定其他事件来触发，具体如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1、用户发送信息</span><br><span class="line">2、点击自定义菜单（仅有点击推事件、扫码推事件、扫码推事件且弹出“消息接收中”提示框这3种菜单类型是会触发客服接口的）</span><br><span class="line">3、关注公众号</span><br><span class="line">4、扫描二维码</span><br><span class="line">5、支付成功</span><br><span class="line">6、用户维权</span><br></pre></td></tr></table></figure><h4 id="3-将消息转发到客服"><a href="#3-将消息转发到客服" class="headerlink" title="3. 将消息转发到客服"></a>3. 将消息转发到客服</h4><blockquote><p>如果公众号处于开发模式，普通微信用户向公众号发消息时，微信服务器会先将消息POST到开发者填写的url上，如果希望将消息转发到客服系统，则需要开发者在响应包中返回MsgType为transfer_customer_service的消息，微信服务器收到响应后会把当次发送的消息转发至客服系统。</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将消息转发到客服</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> zhengkexin</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@created</span> 2019-04-19 17:02:49</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">forwardCustomerService</span><span class="params">($obj)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 不指定转发</span></span><br><span class="line">    $tmpXml = <span class="string">'&lt;xml&gt;</span></span><br><span class="line"><span class="string">                &lt;ToUserName&gt;&lt;![CDATA[%s]]&gt;&lt;/ToUserName&gt;</span></span><br><span class="line"><span class="string">                &lt;FromUserName&gt;&lt;![CDATA[%s]]&gt;&lt;/FromUserName&gt;</span></span><br><span class="line"><span class="string">                &lt;CreateTime&gt;%s&lt;/CreateTime&gt;</span></span><br><span class="line"><span class="string">                &lt;MsgType&gt;&lt;![CDATA[transfer_customer_service]]&gt;&lt;/MsgType&gt;</span></span><br><span class="line"><span class="string">            &lt;/xml&gt;'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 指定转发到某客服</span></span><br><span class="line">    $tmpXml1 = <span class="string">'&lt;xml&gt;</span></span><br><span class="line"><span class="string">                &lt;ToUserName&gt;&lt;![CDATA[%s]]&gt;&lt;/ToUserName&gt;</span></span><br><span class="line"><span class="string">                &lt;FromUserName&gt;&lt;![CDATA[%s]]&gt;&lt;/FromUserName&gt;</span></span><br><span class="line"><span class="string">                &lt;CreateTime&gt;%s&lt;/CreateTime&gt;</span></span><br><span class="line"><span class="string">                &lt;MsgType&gt;&lt;![CDATA[transfer_customer_service]]&gt;&lt;/MsgType&gt;</span></span><br><span class="line"><span class="string">                &lt;TransInfo&gt;</span></span><br><span class="line"><span class="string">                    &lt;KfAccount&gt;&lt;![CDATA[test1@test]]&gt;&lt;/KfAccount&gt;</span></span><br><span class="line"><span class="string">                &lt;/TransInfo&gt;</span></span><br><span class="line"><span class="string">            &lt;/xml&gt;'</span>;</span><br><span class="line"></span><br><span class="line">    $resultXml = sprintf($tmpXml, $obj-&gt;FromUserName, $obj-&gt;ToUserName, time());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> $resultXml;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="四、注意"><a href="#四、注意" class="headerlink" title="四、注意"></a>四、注意</h3><blockquote><p>网上很多教程都是用 <code>$GLOBALS[&quot;HTTP_RAW_POST_DATA&quot;]</code>  来接收微信服务器发来的消息，但可能有一些人说没有接收到信息。</p><p>在 <a href="https://www.php.net/manual/zh/reserved.variables.httprawpostdata.php" target="_blank" rel="noopener">www.php.net</a> 里关于这个预定义变量，有一个提醒</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; Warning This feature was DEPRECATED in PHP 5.6.0, and REMOVED as of PHP 7.0.0.</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>此功能在PHP 5.6.0中已弃用，从PHP 7.0.0开始已删除。</p><p>所以他给出的是使用 <code>php://input</code> 来代替</p></blockquote><p><em>望对你们有用，有什么不对也欢迎大家向我反馈，请多指教</em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;完整代码地址： &lt;a href=&quot;https://github.com/zhengkx/weChat-development&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;微信公众号开发之客服消息&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;一、接入微信公众号平台&quot;&gt;
      
    
    </summary>
    
    
      <category term="PHP" scheme="http://yoursite.com/categories/PHP/"/>
    
    
      <category term="PHP" scheme="http://yoursite.com/tags/PHP/"/>
    
      <category term="微信公众号" scheme="http://yoursite.com/tags/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7/"/>
    
  </entry>
  
  <entry>
    <title>网页版微信接口调用实例</title>
    <link href="http://yoursite.com/2019/04/16/%E7%BD%91%E9%A1%B5%E7%89%88%E5%BE%AE%E4%BF%A1%E6%8E%A5%E5%8F%A3%E8%B0%83%E7%94%A8%E5%AE%9E%E4%BE%8B/"/>
    <id>http://yoursite.com/2019/04/16/网页版微信接口调用实例/</id>
    <published>2019-04-16T08:53:23.000Z</published>
    <updated>2019-11-03T07:09:15.442Z</updated>
    
    <content type="html"><![CDATA[<p>项目地址：<a href="https://github.com/zhengkx/web_wechat_api" target="_blank" rel="noopener"><a href="https://github.com/zhengkx/web_wechat_api" target="_blank" rel="noopener">https://github.com/zhengkx/web_wechat_api</a></a></p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><ul><li>扫码登录</li><li>获取好友列表</li><li>检查是否有新消息</li><li>同步消息</li><li>发送消息</li><li>获取联系人详情信息</li></ul><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>将文件放到到 www 目录，地址输入 <code>http://localhost/wechat/index.html</code> 即可扫码，确认登录（<em>有时候可以需要扫多一次</em>）</p><p>然后就可以跳到列表。</p><p>点击 <code>开始监听消息</code> 开始监听消息</p><blockquote><p>开始监听消息之后，同步消息已经同步进行的，有消息就会插入数据表</p></blockquote><p>点击 <code>发送消息</code> , 弹出弹框 ，在文本框输入发送内容，点击发送，弹出 <code>发送成功</code> 即发送成功</p><p>点击联系人昵称，可以获取联系人详情</p><p><em>前端页面比较简单，但重要的是微信接口能够调用</em><br><em>希望对你们有用，有什么不对也欢迎大家向我反馈，请多指教</em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;项目地址：&lt;a href=&quot;https://github.com/zhengkx/web_wechat_api&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;a href=&quot;https://github.com/zhengkx/web_wechat_ap
      
    
    </summary>
    
    
      <category term="PHP" scheme="http://yoursite.com/categories/PHP/"/>
    
    
      <category term="PHP" scheme="http://yoursite.com/tags/PHP/"/>
    
      <category term="Wechat" scheme="http://yoursite.com/tags/Wechat/"/>
    
  </entry>
  
</feed>
